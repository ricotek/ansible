- name: prep kernel & add cri-o repo
  shell: |
     modprobe overlay
     modprobe br_netfilter
     tee /etc/sysctl.d/kubernetes.conf<<EOF
     net.bridge.bridge-nf-call-ip6tables = 1
     net.bridge.bridge-nf-call-iptables = 1
     net.ipv4.ip_forward = 1
     EOF
     sysctl --system
     sudo su -
     OS="xUbuntu_20.04"
     VERSION=1.26
     echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
     echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
     curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key add -
     curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key add -
     apt-get update
  register: shell_output

- name: Install a list of prerequisites & cri-o 
  ansible.builtin.apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    - cri-o 
    - cri-o-runc
    state: latest

- name: Update CRI-O CIDR subnet & Start and enable Service
  shell: |
     sed -i 's/10.85.0.0/192.168.0.0/g' /etc/cni/net.d/100-crio-bridge.conf
     sed -i 's/10.85.0.0/192.168.0.0/g' /etc/cni/net.d/100-crio-bridge.conflist
     sudo systemctl daemon-reload
     systemctl restart crio
     systemctl enable crio
     systemctl status crio
  register: shell_output

- name: Add source repo and key for k8s
  shell: |
     curl -fsSL  https://packages.cloud.google.com/apt/doc/apt-key.gpg|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/k8s.gpg
     curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
     echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list 
     apt update
  register: shell_output

- name: install required packages & kubernetes stuff
  ansible.builtin.apt:
    pkg:
    - wget
    - vim
    - git 
    - kubelet
    - kubeadm
    - kubectl
    state: latest

- name: hold & confirm k8s
  shell: |
     apt-mark hold kubelet kubeadm kubectl
     kubectl version --client && kubeadm version
  register: shell_output

- name: Disable swap, load kernel modules & set parameters for Kubernetes
  shell: |
     swapoff -a
     sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
     mount -a
     free -h
     tee /etc/modules-load.d/containerd.conf <<EOF \
     overlay \
     br_netfilter
     modprobe overlay
     modprobe br_netfilter
     tee /etc/sysctl.d/kubernetes.conf <<EOF \
     net.bridge.bridge-nf-call-ip6tables = 1 \
     net.bridge.bridge-nf-call-iptables = 1 \
     net.ipv4.ip_forward = 1 \
     EOF
     sysctl --system
  register: shell_output

- name: Initialize control plane, enable kubelet service...
  shell: |
     lsmod | grep br_netfilter
     systemctl enable kubelet
     kubeadm config images pull --cri-socket unix:///var/run/crio/crio.sock
     kubeadm init \
     --pod-network-cidr=192.168.0.0/16 \
     --cri-socket unix:///var/run/crio/crio.sock 
     kubeadm init \
     --pod-network-cidr=192.168.0.0/16 \
     --upload-certs \
     --control-plane-endpoint=k8s-cluster.ricotek.com
  register: shell_output
